{"mappings":"AAAA,MAAMA,gBAAkB,gPAElBC,cAAgBC,UAElB,IAEI,MAAMC,QAAiBC,MAAMJ,iBAE7B,IAAIG,EAASE,GAsBT,MAAM,IAAIC,MAAM,wBAtBH,CAEb,MAAMC,QAAaJ,EAASK,OAEtBC,EAAgB,CAClBC,QAAS,CAAC,cAAe,yBAA0B,mBAAoB,uBACvEC,SAAU,CAAC,eAAgB,0BAA2B,oBAAqB,wBAC3EC,SAAU,CAAC,eAAgB,0BAA2B,oBAAqB,wBAC3EC,QAAS,CAAC,cAAe,yBAA0B,mBAAoB,uBACvEC,OAAQ,CAAC,aAAc,wBAAyB,kBAAmB,uBAGvE,IAAK,MAAOC,EAAQC,KAAQC,OAAOC,QAAQT,GAAgB,CACvD,MAAMU,EAAaZ,EAAKQ,GACxBK,SAASC,eAAeL,EAAI,IAAIM,UAAYH,EAAWI,IACvDH,SAASC,eAAeL,EAAI,IAAIM,UAAYH,EAAWK,eACvDJ,SAASC,eAAeL,EAAI,IAAIM,UAAYH,EAAWM,YACvDL,SAASC,eAAeL,EAAI,IAAIM,UAAYI,KAAKC,MAAkC,GAA5BR,EAAWS,gBAAuB,E,GAOnG,MAAOC,GAELC,QAAQC,IAAIF,E,GAIpB5B","sources":["src/js/api-config.js"],"sourcesContent":["const BASE_CRYPTO_SRC = \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin%2Cethereum%2Ctether%2CBNB%2CUSD%20coin%2CXRP%2CBinance%20USD%2CCardano%2CSolana%2CDogecoin&vs_currencies=usd&include_market_cap=true&include_24hr_vol=true&include_24hr_change=true\";\r\n\r\nconst getCryptoData = async () => {\r\n\r\n    try {\r\n\r\n        const response = await fetch(BASE_CRYPTO_SRC);\r\n\r\n        if (response.ok) {\r\n\r\n            const data = await response.json();\r\n\r\n            const cryptoDataMap = {\r\n                bitcoin: [\"bitcoin-USD\", \"bitcoin-USD-market-cap\", \"bitcoin-24hr-vol\", \"bitcoin-24hr-change\"],\r\n                ethereum: [\"ethereum-USD\", \"ethereum-USD-market-cap\", \"ethereum-24hr-vol\", \"ethereum-24hr-change\"],\r\n                dogecoin: [\"dogecoin-USD\", \"dogecoin-USD-market-cap\", \"dogecoin-24hr-vol\", \"dogecoin-24hr-change\"],\r\n                cardano: [\"cardano-USD\", \"cardano-USD-market-cap\", \"cardano-24hr-vol\", \"cardano-24hr-change\"],\r\n                tether: [\"tether-USD\", \"tether-USD-market-cap\", \"tether-24hr-vol\", \"tether-24hr-change\"],\r\n            };\r\n\r\n            for (const [crypto, ids] of Object.entries(cryptoDataMap)) {\r\n                const cryptoData = data[crypto];\r\n                document.getElementById(ids[0]).innerHTML = cryptoData.usd;\r\n                document.getElementById(ids[1]).innerHTML = cryptoData.usd_market_cap;\r\n                document.getElementById(ids[2]).innerHTML = cryptoData.usd_24h_vol;\r\n                document.getElementById(ids[3]).innerHTML = Math.round(cryptoData.usd_24h_change * 10) / 10;\r\n            }\r\n\r\n        } else {\r\n\r\n            throw new Error(\"Failed to fetch data\");\r\n        }\r\n    } catch (error) {\r\n\r\n        console.log(error);\r\n    }\r\n};\r\n\r\ngetCryptoData();"],"names":["BASE_CRYPTO_SRC","getCryptoData","async","response","fetch","ok","Error","data","json","cryptoDataMap","bitcoin","ethereum","dogecoin","cardano","tether","crypto","ids","Object","entries","cryptoData","document","getElementById","innerHTML","usd","usd_market_cap","usd_24h_vol","Math","round","usd_24h_change","error","console","log"],"version":3,"file":"index.98e42079.js.map"}