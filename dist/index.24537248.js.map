{"mappings":"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","sources":["src/js/api-config.js"],"sourcesContent":["const baseCryptoSrc = \"https://api.coingecko.com/api/v3/simple/price?ids=bitcoin%2Cethereum%2Ctether%2CBNB%2CUSD%20coin%2CXRP%2CBinance%20USD%2CCardano%2CSolana%2CDogecoin&vs_currencies=usd&include_market_cap=true&include_24hr_vol=true&include_24hr_change=true\";\r\n\r\nfetch(`${baseCryptoSrc}`, {\r\n    method: \"GET\",\r\n}).then((Response) => {\r\n    \r\n    if(Response.ok) {\r\n        Response.json().then((json) => {\r\n\r\n            console.log(json);\r\n            \r\n            let cryptoBitcoinData = json.bitcoin;\r\n            console.log(cryptoBitcoinData);\r\n            document.getElementById(\"bitcoin-USD\").innerHTML = cryptoBitcoinData.usd;\r\n            document.getElementById(\"bitcoin-USD-market-cap\").innerHTML = cryptoBitcoinData.usd_market_cap;\r\n            document.getElementById(\"bitcoin-24hr-vol\").innerHTML = cryptoBitcoinData.usd_24h_vol;\r\n            document.getElementById(\"bitcoin-24hr-change\").innerHTML = (Math.round(cryptoBitcoinData.usd_24h_change * 10) / 10);\r\n\r\n            let cryptoEthereumData = json.ethereum;\r\n            console.log(cryptoEthereumData);\r\n            document.getElementById(\"ethereum-USD\").innerHTML = cryptoEthereumData.usd;\r\n            document.getElementById(\"ethereum-USD-market-cap\").innerHTML = cryptoEthereumData.usd_market_cap;\r\n            document.getElementById(\"ethereum-24hr-vol\").innerHTML = cryptoEthereumData.usd_24h_vol;\r\n            document.getElementById(\"ethereum-24hr-change\").innerHTML = (Math.round(cryptoEthereumData.usd_24h_change * 10) / 10);\r\n\r\n            let cryptoDogecoinData = json.dogecoin;\r\n            console.log(cryptoDogecoinData);\r\n            document.getElementById(\"dogecoin-USD\").innerHTML = cryptoDogecoinData.usd;\r\n            document.getElementById(\"dogecoin-USD-market-cap\").innerHTML = cryptoDogecoinData.usd_market_cap;\r\n            document.getElementById(\"dogecoin-24hr-vol\").innerHTML = cryptoDogecoinData.usd_24h_vol;\r\n            document.getElementById(\"dogecoin-24hr-change\").innerHTML = (Math.round(cryptoDogecoinData.usd_24h_change * 10) / 10);\r\n\r\n            let cryptoCardanoData = json.cardano;\r\n            console.log(cryptoCardanoData);\r\n            document.getElementById(\"cardano-USD\").innerHTML = cryptoCardanoData.usd;\r\n            document.getElementById(\"cardano-USD-market-cap\").innerHTML = cryptoCardanoData.usd_market_cap;\r\n            document.getElementById(\"cardano-24hr-vol\").innerHTML = cryptoCardanoData.usd_24h_vol;\r\n            document.getElementById(\"cardano-24hr-change\").innerHTML = (Math.round(cryptoCardanoData.usd_24h_change * 10) / 10);\r\n\r\n            let cryptoTetherData = json.tether;\r\n            console.log(cryptoTetherData);\r\n            document.getElementById(\"tether-USD\").innerHTML = cryptoBitcoinData.usd;\r\n            document.getElementById(\"tether-USD-market-cap\").innerHTML = cryptoTetherData.usd_market_cap;\r\n            document.getElementById(\"tether-24hr-vol\").innerHTML = cryptoTetherData.usd_24h_vol;\r\n            document.getElementById(\"tether-24hr-change\").innerHTML = (Math.round(cryptoTetherData.usd_24h_change * 10) / 10)\r\n        })\r\n    }\r\n}).catch((error) => {\r\n    console.log(error);\r\n});"],"names":[],"version":3,"file":"index.24537248.js.map","sourceRoot":"/__parcel_source_root/"}